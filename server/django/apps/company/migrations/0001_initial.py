# Generated by Django 4.2.17 on 2025-01-15 06:29

import apps.company.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Company Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo')),
                ('slug', models.SlugField(max_length=48, unique=True, validators=[apps.company.models.slug_validator])),
                ('organization_type', models.CharField(choices=[('private_limited', 'Private Limited'), ('public_limited', 'Public Limited'), ('sole_proprietorship', 'Sole Proprietorship'), ('partnership', 'Partnership'), ('corporation', 'Corporation'), ('non_profit', 'Non-profit')], default='private_limited', max_length=255)),
                ('tax_registration_number', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('country_iso', models.CharField(blank=True, max_length=2, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True)),
                ('phone', models.CharField(blank=True, max_length=18, null=True)),
                ('alternate_phone', models.CharField(blank=True, max_length=18, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('alternate_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('enable_sales_invoice_update', models.BooleanField(default=False)),
                ('enable_cheque_deposit_update', models.BooleanField(default=False)),
                ('enable_credit_note_update', models.BooleanField(default=False)),
                ('enable_debit_note_update', models.BooleanField(default=False)),
                ('enable_sales_agents', models.BooleanField(default=False)),
                ('synchronize_cbms_nepal_test', models.BooleanField(default=False)),
                ('synchronize_cbms_nepal_live', models.BooleanField(default=False)),
                ('config_template', models.CharField(default='np', max_length=255)),
                ('invoice_template', models.IntegerField(choices=[(1, 'Template 1'), (2, 'Template 2'), (3, 'Template 3')], default=1)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=24)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=80, verbose_name='Permission Name')),
                ('permissions', models.JSONField(default=apps.company.models.get_default_permissions)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_permissions', to='company.company')),
            ],
            options={
                'verbose_name': 'Company Permission',
                'verbose_name_plural': 'Company Permissions',
                'ordering': ('-created_at',),
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CompanyMember',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('access_level', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('member', 'Member')], default='member', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_members', to='company.company')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_company', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(related_name='member_permission', to='company.permission')),
            ],
            options={
                'verbose_name': 'Company Member',
                'verbose_name_plural': 'Company Members',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='company',
            name='current_fiscal_year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='company.fiscalyear'),
        ),
        migrations.CreateModel(
            name='CompanyMemberInvite',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.CharField(max_length=255)),
                ('accepted', models.BooleanField(default=False)),
                ('token', models.CharField(max_length=255)),
                ('message', models.TextField(null=True)),
                ('responded_at', models.DateTimeField(null=True)),
                ('access_level', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('member', 'Member')], default='member', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_memberinvites', to='company.company')),
                ('permissions', models.ManyToManyField(related_name='invite_permission', to='company.permission')),
            ],
            options={
                'verbose_name': 'Company Member Invite',
                'verbose_name_plural': 'Company Member Invites',
                'ordering': ('-created_at',),
                'unique_together': {('email', 'company')},
            },
        ),
        migrations.AddConstraint(
            model_name='companymember',
            constraint=models.UniqueConstraint(condition=models.Q(('access_level', 'owner')), fields=('company', 'access_level'), name='company_unique_owner'),
        ),
        migrations.AlterUniqueTogether(
            name='companymember',
            unique_together={('company', 'member')},
        ),
    ]
