# Generated by Django 4.2.17 on 2025-01-15 06:29

import apps.voucher.models
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0002_initial'),
        ('tax', '0001_initial'),
        ('company', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bank', '0002_initial'),
        ('ledger', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('meta_sub_total', models.FloatField(blank=True, null=True)),
                ('meta_sub_total_after_row_discounts', models.FloatField(blank=True, null=True)),
                ('meta_discount', models.FloatField(blank=True, null=True)),
                ('meta_non_taxable', models.FloatField(blank=True, null=True)),
                ('meta_taxable', models.FloatField(blank=True, null=True)),
                ('meta_tax', models.FloatField(blank=True, null=True)),
                ('voucher_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('issue_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('date', models.DateField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled'), ('Resolved', 'Resolved')], max_length=255)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('print_count', models.PositiveSmallIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challan', to='company.company')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challan', to='company.fiscalyear')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ledger.party')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('meta_sub_total', models.FloatField(blank=True, null=True)),
                ('meta_sub_total_after_row_discounts', models.FloatField(blank=True, null=True)),
                ('meta_discount', models.FloatField(blank=True, null=True)),
                ('meta_non_taxable', models.FloatField(blank=True, null=True)),
                ('meta_taxable', models.FloatField(blank=True, null=True)),
                ('meta_tax', models.FloatField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('voucher_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled'), ('Resolved', 'Resolved')], default='Draft', max_length=25)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('mode', models.CharField(blank=True, choices=[('Credit', 'Credit'), ('Cash', 'Cash'), ('Bank Deposit', 'Bank Deposit')], default='Credit', max_length=15, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField()),
                ('print_count', models.PositiveSmallIntegerField(default=0)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.bankaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('meta_sub_total', models.FloatField(blank=True, null=True)),
                ('meta_sub_total_after_row_discounts', models.FloatField(blank=True, null=True)),
                ('meta_discount', models.FloatField(blank=True, null=True)),
                ('meta_non_taxable', models.FloatField(blank=True, null=True)),
                ('meta_taxable', models.FloatField(blank=True, null=True)),
                ('meta_tax', models.FloatField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('voucher_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled'), ('Resolved', 'Resolved')], default='Draft', max_length=25)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('mode', models.CharField(blank=True, choices=[('Credit', 'Credit'), ('Cash', 'Cash'), ('Bank Deposit', 'Bank Deposit')], default='Credit', max_length=15, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField()),
                ('print_count', models.PositiveSmallIntegerField(default=0)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.bankaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='JournalVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_no', models.IntegerField()),
                ('date', models.DateField()),
                ('narration', models.TextField()),
                ('status', models.CharField(choices=[('Cancelled', 'Cancelled'), ('Approved', 'Approved'), ('Unapproved', 'Unapproved')], default='Unapproved', max_length=10)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
            ],
            options={
                'unique_together': {('company', 'voucher_no')},
            },
        ),
        migrations.CreateModel(
            name='PaymentMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('name', models.CharField(max_length=255)),
                ('enabled_for_sales', models.BooleanField(default=True)),
                ('enabled_for_purchase', models.BooleanField(default=True)),
                ('transaction_fee_config', models.JSONField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_modes', to='ledger.account')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('transaction_fee_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_mode_transaction_fee', to='ledger.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=25)),
                ('value', models.FloatField()),
                ('trade_discount', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_discounts', to='company.company')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('meta_sub_total', models.FloatField(blank=True, null=True)),
                ('meta_sub_total_after_row_discounts', models.FloatField(blank=True, null=True)),
                ('meta_discount', models.FloatField(blank=True, null=True)),
                ('meta_non_taxable', models.FloatField(blank=True, null=True)),
                ('meta_taxable', models.FloatField(blank=True, null=True)),
                ('meta_tax', models.FloatField(blank=True, null=True)),
                ('voucher_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('issue_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('Issued', 'Issued'), ('Cancelled', 'Cancelled')], max_length=255)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('print_count', models.PositiveSmallIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_Orders', to='company.company')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='company.fiscalyear')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ledger.party')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('company', 'voucher_no', 'fiscal_year')},
            },
        ),
        migrations.CreateModel(
            name='PurchaseVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('meta_sub_total', models.FloatField(blank=True, null=True)),
                ('meta_sub_total_after_row_discounts', models.FloatField(blank=True, null=True)),
                ('meta_discount', models.FloatField(blank=True, null=True)),
                ('meta_non_taxable', models.FloatField(blank=True, null=True)),
                ('meta_taxable', models.FloatField(blank=True, null=True)),
                ('meta_tax', models.FloatField(blank=True, null=True)),
                ('voucher_no', models.CharField(blank=True, max_length=25, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled'), ('Paid', 'Paid'), ('Partially Paid', 'Partially Paid')], default='Draft', max_length=15)),
                ('mode', models.CharField(blank=True, choices=[('Credit', 'Credit'), ('Cash', 'Cash'), ('Bank Deposit', 'Bank Deposit')], default='Credit', max_length=15, null=True)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_import', models.BooleanField(default=False)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.bankaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchases', to='voucher.purchasediscount')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_vouchers', to='company.fiscalyear')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ledger.party')),
                ('payment_mode', models.ForeignKey(blank=True, help_text='Payment mode for this purchase. Null means it is not paid (credit).', null=True, on_delete=django.db.models.deletion.PROTECT, to='voucher.paymentmode')),
                ('purchase_orders', models.ManyToManyField(blank=True, related_name='purchases', to='voucher.purchaseorder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_vouchers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('compensation_multiplier', models.FloatField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_agents', to='company.company')),
            ],
            options={
                'ordering': ['-id'],
                'unique_together': {('name', 'company')},
            },
        ),
        migrations.CreateModel(
            name='SalesDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=25)),
                ('value', models.FloatField()),
                ('trade_discount', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_discounts', to='company.company')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('meta_sub_total', models.FloatField(blank=True, null=True)),
                ('meta_sub_total_after_row_discounts', models.FloatField(blank=True, null=True)),
                ('meta_discount', models.FloatField(blank=True, null=True)),
                ('meta_non_taxable', models.FloatField(blank=True, null=True)),
                ('meta_taxable', models.FloatField(blank=True, null=True)),
                ('meta_tax', models.FloatField(blank=True, null=True)),
                ('voucher_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('issue_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('date', models.DateField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled'), ('Paid', 'Paid'), ('Partially Paid', 'Partially Paid')], default='Draft', max_length=15)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('mode', models.CharField(blank=True, choices=[('Credit', 'Credit'), ('Cash', 'Cash'), ('Bank Deposit', 'Bank Deposit')], default='Credit', max_length=15, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_export', models.BooleanField(default=False)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('print_count', models.PositiveSmallIntegerField(default=0)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.bankaccount')),
                ('challans', models.ManyToManyField(blank=True, related_name='sales', to='voucher.challan')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_invoices', to='company.company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='voucher.salesdiscount')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_invoices', to='company.fiscalyear')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sales_invoices', to='ledger.party')),
                ('payment_mode', models.ForeignKey(blank=True, help_text='Payment mode for this sales invoice. Null means it is not paid (credit).', null=True, on_delete=django.db.models.deletion.PROTECT, to='voucher.paymentmode')),
                ('sales_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_invoices', to='voucher.salesagent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_invoices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('company', 'voucher_no', 'fiscal_year')},
            },
        ),
        migrations.CreateModel(
            name='SalesVoucherRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('rate', models.FloatField()),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('tax_amount', models.FloatField(blank=True, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_%(class)s', to='company.company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_rows', to='voucher.salesdiscount')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_rows', to='product.item')),
                ('tax_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_rows', to='tax.taxscheme')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_rows', to='product.unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.salesvoucher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_party_by_default', models.BooleanField(default=True)),
                ('show_trade_discount_in_voucher', models.BooleanField(default=False)),
                ('is_trade_discount_in_voucher', models.BooleanField(default=False)),
                ('show_trade_discount_in_row', models.BooleanField(default=False)),
                ('is_trade_discount_in_row', models.BooleanField(default=False)),
                ('enable_due_date_in_voucher', models.BooleanField(default=False)),
                ('mode', models.CharField(default='Credit', max_length=15)),
                ('enable_row_description', models.BooleanField(default=False)),
                ('enable_import_challan', models.BooleanField(default=False)),
                ('enable_amount_entry', models.BooleanField(default=False)),
                ('show_rate_quantity_in_voucher', models.BooleanField(default=True)),
                ('invoice_footer_text', models.CharField(blank=True, max_length=255, null=True)),
                ('persist_pos_items', models.BooleanField(default=False)),
                ('enable_sales_date_edit', models.BooleanField(default=False)),
                ('default_email_attachments', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.bankaccount')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sales_setting', to='company.company')),
                ('payment_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_setting', to='voucher.paymentmode')),
            ],
        ),
        migrations.CreateModel(
            name='RecurringVoucherTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Sales Voucher', 'Sales Voucher'), ('Purchase Voucher', 'Purchase Voucher')], max_length=25)),
                ('invoice_data', models.JSONField()),
                ('repeat_interval', models.PositiveSmallIntegerField()),
                ('repeat_interval_time_unit', models.CharField(choices=[('Day(s)', 'Day(s)'), ('Week(s)', 'Week(s)'), ('Month(s)', 'Month(s)'), ('Year(s)', 'Year(s)')], max_length=10)),
                ('due_date_after', models.PositiveSmallIntegerField()),
                ('due_date_after_time_unit', models.CharField(choices=[('Day(s)', 'Day(s)'), ('Week(s)', 'Week(s)'), ('Month(s)', 'Month(s)'), ('Year(s)', 'Year(s)')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('end_after', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('send_email', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_generated', models.DateField(blank=True, null=True)),
                ('next_date', models.DateField(blank=True, null=True)),
                ('no_of_vouchers_created', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseVoucherRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField()),
                ('rate', models.FloatField()),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('discount_amount', models.FloatField(blank=True, null=True)),
                ('tax_amount', models.FloatField(blank=True, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_%(class)s', to='company.company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_rows', to='voucher.purchasediscount')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_rows', to='product.item')),
                ('tax_scheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tax.taxscheme')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_rows', to='product.unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.purchasevoucher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_trade_discount_in_voucher', models.BooleanField(default=False)),
                ('is_trade_discount_in_voucher', models.BooleanField(default=False)),
                ('show_trade_discount_in_row', models.BooleanField(default=False)),
                ('is_trade_discount_in_row', models.BooleanField(default=False)),
                ('enable_due_date_in_voucher', models.BooleanField(default=False)),
                ('enable_empty_voucher_no', models.BooleanField(default=False)),
                ('mode', models.CharField(default='Credit', max_length=15)),
                ('enable_row_description', models.BooleanField(default=False)),
                ('enable_purchase_order_import', models.BooleanField(default=False)),
                ('enable_item_rate_change_alert', models.BooleanField(default=False)),
                ('rate_change_alert_emails', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, default=list, size=None)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.bankaccount')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_setting', to='company.company')),
                ('payment_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_setting', to='voucher.paymentmode')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_order_rows', to='product.item')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.purchaseorder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('date', models.DateField()),
                ('mode', models.CharField(choices=[('Cheque', 'Cheque'), ('Cash', 'Cash'), ('Bank Deposit', 'Bank Deposit')], default='Cheque', max_length=15)),
                ('amount', models.FloatField()),
                ('tds_amount', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('Issued', 'Issued'), ('Cleared', 'Cleared'), ('Cancelled', 'Cancelled')], default='Issued', max_length=20)),
                ('transaction_charge', models.FloatField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('clearing_date', models.DateField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_receipts', to='bank.bankaccount')),
                ('cheque_deposit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_receipts', to='bank.chequedeposit')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('invoices', models.ManyToManyField(related_name='payment_receipts', to='voucher.salesvoucher')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_receipts', to='ledger.party')),
                ('transaction_charge_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payment_receipts', to='ledger.transactioncharge')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JournalVoucherRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('type', models.CharField(choices=[('Dr', 'Dr'), ('Cr', 'Cr')], default='Dr', max_length=2)),
                ('description', models.TextField(blank=True, null=True)),
                ('dr_amount', models.FloatField(blank=True, null=True)),
                ('cr_amount', models.FloatField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_voucher_rows', to='ledger.account')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_%(class)s', to='company.company')),
                ('journal_voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.journalvoucher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('design', models.ImageField(upload_to='design/')),
                ('canvas', models.TextField()),
                ('width', models.PositiveSmallIntegerField()),
                ('height', models.PositiveSmallIntegerField()),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=apps.voucher.models.Import.get_path)),
                ('type', models.CharField(choices=[('Sales Voucher', 'Sales Voucher'), ('Purchase Voucher', 'Purchase Voucher'), ('Credit Note', 'Credit Note'), ('Debit Note', 'Debit Note'), ('Item', 'Item'), ('Party', 'Party')], max_length=25)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Failed', 'Failed')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DebitNoteRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('is_returned', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('rate', models.FloatField()),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('purchase_row_data', models.JSONField(blank=True, default=dict)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_%(class)s', to='company.company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debit_note_rows', to='voucher.purchasediscount')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.item')),
                ('tax_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_note_rows', to='tax.taxscheme')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.debitnote')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='debitnote',
            name='discount_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debit_notes', to='voucher.purchasediscount'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='fiscal_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_notes', to='company.fiscalyear'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='invoices',
            field=models.ManyToManyField(related_name='debit_notes', to='voucher.purchasevoucher'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ledger.party'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='payment_mode',
            field=models.ForeignKey(blank=True, help_text='Payment mode for this debit note. Null means it is not paid (credit).', null=True, on_delete=django.db.models.deletion.PROTECT, to='voucher.paymentmode'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CreditNoteRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('is_returned', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('rate', models.FloatField()),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('trade_discount', models.BooleanField(default=False)),
                ('sales_row_data', models.JSONField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_%(class)s', to='company.company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_note_rows', to='voucher.salesdiscount')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.item')),
                ('tax_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_note_rows', to='tax.taxscheme')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.creditnote')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='creditnote',
            name='discount_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_notes', to='voucher.salesdiscount'),
        ),
        migrations.AddField(
            model_name='creditnote',
            name='fiscal_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_notes', to='company.fiscalyear'),
        ),
        migrations.AddField(
            model_name='creditnote',
            name='invoices',
            field=models.ManyToManyField(related_name='credit_notes', to='voucher.salesvoucher'),
        ),
        migrations.AddField(
            model_name='creditnote',
            name='party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ledger.party'),
        ),
        migrations.AddField(
            model_name='creditnote',
            name='payment_mode',
            field=models.ForeignKey(blank=True, help_text='Payment mode for this credit note. Null means it is not paid (credit).', null=True, on_delete=django.db.models.deletion.PROTECT, to='voucher.paymentmode'),
        ),
        migrations.AddField(
            model_name='creditnote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChallanRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_%(class)s', to='company.company')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challan_rows', to='product.item')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.challan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='challan',
            name='sales_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='challan', to='voucher.salesagent'),
        ),
        migrations.AddField(
            model_name='challan',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challan', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='debitnote',
            unique_together={('company', 'voucher_no', 'fiscal_year')},
        ),
        migrations.AlterUniqueTogether(
            name='creditnote',
            unique_together={('company', 'voucher_no', 'fiscal_year')},
        ),
        migrations.AlterUniqueTogether(
            name='challan',
            unique_together={('company', 'voucher_no', 'fiscal_year')},
        ),
    ]
