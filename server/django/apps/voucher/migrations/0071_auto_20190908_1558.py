# Generated by Django 2.1.5 on 2019-09-08 10:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tax', '0005_auto_20190522_1524'),
        ('bank', '0004_bankaccount_short_name'),
        ('users', '0038_auto_20190906_1952'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ledger', '0018_auto_20190823_1540'),
        ('product', '0033_auto_20190823_1540'),
        ('voucher', '0070_creditnote_print_count'),
    ]

    operations = [
        migrations.CreateModel(
            name='DebitNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('voucher_no', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Issued', 'Issued'), ('Cancelled', 'Cancelled'), ('Resolved', 'Resolved')], default='Draft', max_length=25)),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('mode', models.CharField(choices=[('Credit', 'Credit'), ('Cash', 'Cash'), ('Cheque', 'Cheque'), ('ePayment', 'ePayment'), ('Bank Deposit', 'Bank Deposit')], default='Credit', max_length=15)),
                ('remarks', models.TextField()),
                ('print_count', models.PositiveSmallIntegerField(default=0)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.BankAccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debit_notes', to='voucher.PurchaseDiscount')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_notes', to='company.FiscalYear')),
                ('invoices', models.ManyToManyField(related_name='debit_notes', to='voucher.PurchaseVoucher')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ledger.Party')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DebitNoteRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('rate', models.FloatField()),
                ('discount', models.FloatField(default=0)),
                ('discount_type', models.CharField(blank=True, choices=[('Amount', 'Amount'), ('Percent', 'Percent')], max_length=15, null=True)),
                ('discount_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debit_rows', to='voucher.PurchaseDiscount')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Item')),
                ('tax_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_rows', to='tax.TaxScheme')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.Unit')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='voucher.DebitNote')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='debitnote',
            unique_together={('company', 'voucher_no')},
        ),
    ]
