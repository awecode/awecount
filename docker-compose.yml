services:
  frontend:
    container_name: frontend
    build:
      context: ./web/app
      dockerfile: ./web/app/Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./server/django
      dockerfile: ./server/django/Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/docker-entrypoint-api.sh
    env_file:
      - ./server/django/.env
    depends_on:
      - awecount-db
      - awecount-redis

  worker:
    container_name: worker
    build:
      context: ./server/django
      dockerfile: ./server/django/Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/docker-entrypoint-worker.sh
    env_file:
      - ./server/django/.env
    depends_on:
      - backend
      - awecount-db
      - awecount-redis

  migrator:
    container_name: migrator
    build:
      context: ./server/django
      dockerfile: ./server/django/Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    restart: no
    command: ./bin/docker-entrypoint-migrator.sh
    env_file:
      - ./server/django/.env
    depends_on:
      - awecount-db
      - awecount-redis

  awecount-db:
    container_name: awecount-db
    image: postgres:15.7-alpine
    restart: always
    command: postgres -c 'max_connections=1000'
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data

  awecount-redis:
    container_name: awecount-redis
    image: valkey/valkey:7.2.5-alpine
    restart: always
    volumes:
      - redisdata:/data

  # Comment this if you already have a reverse proxy running
  proxy:
    container_name: proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${NGINX_PORT}:80
    environment:
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT:-5242880}
      BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-uploads}
    depends_on:
      - frontend
      - backend

volumes:
  pgdata:
  redisdata:
